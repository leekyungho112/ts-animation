{"version":3,"sources":["api.ts","utils.ts","assets/noPosterSmall.png","Components/Similar.tsx","Components/Detail.tsx","Routes/Home.tsx","Routes/Tv.tsx","Routes/Search.tsx","Components/Header.tsx","Routes/Movie.tsx","App.tsx","index.tsx","theme.ts"],"names":["API_KEY","BASE_PATH","allTrending","fetch","then","response","json","getMovies","topMovies","upcomingMovie","getTv","getPopularTv","getTopRatedTv","makeImagePath","id","format","Container","styled","div","props","theme","black","darker","Box","motion","bgPhoto","SimilarTitle","h2","Info","boxVariants","normal","scale","hover","y","zIndex","transition","delay","duration","type","infoVariants","opacity","Similar","useParams","movieId","tvId","useQuery","similarMovie","similarTv","data","isLoading","results","map","movie","variants","initial","whileHover","backdrop_path","noPoster","title","name","BigImage","Loader","BigHeader","BigTitle","h3","white","lighter","BigRate","BigOverView","p","BigRunTime","span","BigGenres","ul","Genre","li","BigCompany","CompanyInfo","CompanyLogo","CompanyName","CompanyTitle","Detail","getMovieDetail","getTvDetail","movieLoading","time","runtime","hour","Math","floor","minutes","style","backgroundImage","poster_path","vote_average","overview","number_of_seasons","genres","genre","production_companies","company","index","logo_path","Wrapper","MainBox","Overlay","BigMovie","borderRadius","overflow","Home","navigate","useNavigate","movieMatch","useMatch","tvMatch","scrollY","useViewportScroll","onOverlayClick","AnimatePresence","slice","item","top","get","bottom","onClick","itemId","media","media_type","layoutId","exit","animate","params","Banner","Title","OverView","Slide","PopSlide","TopSlide","Row","ArrowBtn","rowVariants","hidden","x","window","outerWidth","visible","Tv","todayLoading","popTvData","popTvLoading","topTvData","topTvLoading","bigTvMatch","useState","todayIndex","setTodayIndex","popIndex","setPopIndex","topIndex","setTopIndex","leaving","setLeaving","toggleLeaving","prev","onClickBox","onExitComplete","tv","String","totalTv","length","maxIndex","fontSize","BoxContainer","MediaType","Search","console","log","location","useLocation","keyword","URLSearchParams","search","searchAll","mediaType","searchId","Nav","nav","Col","Logo","svg","red","Items","Item","form","Circle","Input","input","logoVariants","start","stroke","strokeWidth","fill","pathLength","end","navVariants","backgroundColor","scroll","Header","searchOpen","setSearchOpen","homeMatch","inputAnimation","useAnimation","navAnimation","useEffect","onChange","useForm","register","setValue","handleSubmit","xmlns","width","height","viewBox","path","default","d","to","pathname","onSubmit","scaleX","fillRule","clipRule","required","minLength","placeholder","Slider","UpcomingSlide","Movie","bigMovieMatch","nowLoading","topMovieData","topMovieLoading","upcomingData","upcomingLoading","setIndex","upIndex","setUpIndex","onBoxClicked","totalMovies","App","basename","process","element","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.28e7e5d5.chunk.js","sourcesContent":["const API_KEY = 'afd07a29753271380c387af2799cf64e';\nconst BASE_PATH = 'https://api.themoviedb.org/3';\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  overview: string;\n  poster_path: string;\n  title: string;\n  release_date?: string;\n  vote_average?: number;\n  name?: string;\n  media_type: string;\n}\ninterface ITv {\n  id: number;\n  backdrop_path: string;\n  overview: string;\n  poster_path: string;\n  name: string;\n  release_date?: string;\n}\ninterface IGenres {\n  id: number;\n  name: string;\n}\ninterface ICompanies {\n  id: number;\n  name: string;\n  logo_path: string;\n}\nexport interface IGetMovieDetail {\n  adult: boolean;\n  backdrop_path: string;\n  genres: IGenres[];\n  homepage: string;\n  id: number;\n  production_companies: ICompanies[];\n  title: string;\n  vote_average: number;\n  overview: string;\n  poster_path: string;\n  name: string;\n  runtime: number;\n  number_of_seasons: number;\n}\n\nexport interface IGetMoviesResult {\n  dates?: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface IGetTv {\n  page: number;\n  results: ITv[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface ISearchResult {\n  page: number;\n  results: IMovie[];\n}\ninterface ITrend {\n  name: string;\n  backdrop_path: string;\n  media_type: string;\n  id: number;\n  overview: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nexport interface ITrendResult {\n  page: number;\n  results: ITrend[];\n  total_pages: number;\n  total_results: number;\n}\nexport function allTrending() {\n  return fetch(\n    `${BASE_PATH}/trending/all/week?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\n\nexport function getMovies() {\n  return fetch(\n    `${BASE_PATH}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=2`\n  ).then((response) => response.json());\n}\n\nexport function topMovies() {\n  return fetch(\n    `${BASE_PATH}/movie/top_rated?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\nexport function upcomingMovie() {\n  return fetch(\n    `${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&language=ko-KR&page=5`\n  ).then((response) => response.json());\n}\nexport function getMovieDetail(movieId: string) {\n  return fetch(\n    `${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\nexport function getTvDetail(tvId: string) {\n  return fetch(\n    `${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\nexport function similarMovie(movieId: string) {\n  return fetch(\n    `${BASE_PATH}/movie/${movieId}/similar?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\nexport function similarTv(tvId: string) {\n  return fetch(\n    `${BASE_PATH}/tv/${tvId}/similar?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\n\nexport function getTv() {\n  return fetch(\n    `${BASE_PATH}/tv/airing_today?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n}\nexport function getPopularTv() {\n  return fetch(\n    `${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=ko-KR&page=4`\n  ).then((response) => response.json());\n}\nexport function getTopRatedTv() {\n  return fetch(\n    `${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=ko-KR&page=2`\n  ).then((response) => response.json());\n}\n\nexport function searchAll(keyword: string | null) {\n  return fetch(\n    `${BASE_PATH}/search/multi?api_key=${API_KEY}&language=ko-KR&query=${keyword}`\n  ).then((response) => response.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : 'original'}${id}`;\n}\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import { motion } from 'framer-motion';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { IGetMoviesResult, similarMovie, similarTv } from '../api';\nimport { makeImagePath } from '../utils';\nimport noPoster from '../assets/noPosterSmall.png';\nimport { useParams } from 'react-router-dom';\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  background-color: ${(props) => props.theme.black.darker};\n  gap: 10px;\n  padding: 20px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  height: 200px;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 5px;\n  position: relative;\n  &:nth-child(odd) {\n    transform-origin: center left;\n  }\n  &:nth-child(even) {\n    transform-origin: center right;\n  }\n`;\nconst SimilarTitle = styled.h2`\n  padding: 20px;\n  font-weight: bold;\n  font-size: 20px;\n`;\nconst Info = styled(motion.div)`\n  padding: 20px;\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.2,\n    y: -30,\n    zIndex: 99,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\ninterface RouteParams {\n  movieId: string;\n  tvId: string;\n}\nconst Similar = () => {\n  const { movieId, tvId } = useParams() as RouteParams;\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\n    ['movie', 'similar'],\n    () => (movieId ? similarMovie(movieId) : similarTv(tvId))\n  );\n\n  return (\n    <>\n      <SimilarTitle>비슷한 콘텐츠</SimilarTitle>\n      <Container>\n        {isLoading\n          ? 'loading,,,'\n          : data?.results.map((movie) => (\n              <Box\n                variants={boxVariants}\n                initial=\"normal\"\n                whileHover=\"hover\"\n                key={movie.id}\n                transition={{ type: 'tween' }}\n                bgPhoto={\n                  movie.backdrop_path\n                    ? makeImagePath(movie.backdrop_path, 'w500')\n                    : noPoster\n                }\n              >\n                <Info variants={infoVariants}>\n                  <h4>{movie.title ? movie.title : movie.name}</h4>\n                </Info>\n              </Box>\n            ))}\n      </Container>\n    </>\n  );\n};\n\nexport default Similar;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { getMovieDetail, getTvDetail, IGetMovieDetail } from '../api';\nimport { makeImagePath } from '../utils';\nimport Similar from './Similar';\nimport noPoster from '../assets/noPosterSmall.png';\nimport { useParams } from 'react-router-dom';\n\nconst Container = styled.div`\n  border-radius: 20px;\n`;\nconst BigImage = styled.div`\n  width: 100%;\n  height: 500px;\n  background-position: center top;\n  background-size: cover;\n`;\nconst Loader = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\nconst BigHeader = styled.div`\n  padding: 20px;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  top: -60px;\n`;\nconst BigTitle = styled.h3`\n  font-size: 30px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BigRate = styled.div`\n  font-size: 15px;\n  font-weight: bold;\n  color: red;\n`;\nconst BigOverView = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  font-size: 14px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BigRunTime = styled.span`\n  margin: 20px;\n  padding: 5px 5px;\n  position: relative;\n  border-radius: 5px;\n  font-weight: bold;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n  background-color: #fbc531;\n`;\nconst BigGenres = styled.ul`\n  display: flex;\n  position: relative;\n  top: -80px;\n  padding: 20px;\n`;\nconst Genre = styled.li`\n  margin-right: 10px;\n  background-color: red;\n  font-size: 17px;\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 5px 5px;\n  transition: all 0.3s linear;\n  cursor: pointer;\n  &:hover {\n    color: black;\n    background-color: white;\n  }\n`;\n\nconst BigCompany = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n  padding: 20px;\n  width: 100%;\n`;\nconst CompanyInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: darkgray;\n  border-radius: 10px;\n`;\nconst CompanyLogo = styled.div<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin: 5px 0px;\n`;\nconst CompanyName = styled.span`\n  font-size: 12px;\n  font-weight: bold;\n  color: white;\n`;\nconst CompanyTitle = styled.span`\n  font-size: 18px;\n  color: white;\n  border-radius: 5px;\n  margin: 0px 20px;\n  padding: 5px 5px;\n  background-color: #269251;\n  font-weight: bold;\n`;\n\ninterface RouteParams {\n  movieId: string;\n  tvId: string;\n}\nconst Detail = () => {\n  const { movieId, tvId } = useParams() as RouteParams;\n\n  const { data, isLoading: movieLoading } = useQuery<IGetMovieDetail>(\n    ['movie', 'Detail'],\n    () => (movieId ? getMovieDetail(movieId) : getTvDetail(tvId))\n  );\n  // const { data: result, isLoading: tvLoading } = useQuery<IGetTvDetail>(\n  //   ['tv', 'tvDetail'],\n  //   () => getTvDetail(tvId)\n  // );\n\n  const time = data?.runtime;\n  const hour = time && Math.floor(time / 60);\n  const minutes = time && time % 60;\n  const isLoading = movieLoading;\n  return (\n    <Container>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <BigImage\n            style={{\n              backgroundImage: `linear-gradient(to top,black, transparent), url(${makeImagePath(\n                data ? data?.poster_path : noPoster\n              )})`,\n            }}\n          />\n          <BigHeader>\n            <BigTitle>{movieId ? data?.title : data?.name}</BigTitle>\n            <BigRate>{`⭐️ ${data && data?.vote_average}`}</BigRate>\n          </BigHeader>\n          <BigOverView>{data && data?.overview}</BigOverView>\n          <BigRunTime>\n            {movieId\n              ? `${hour}시간 ${minutes}분`\n              : `시즌: ${data?.number_of_seasons}`}\n          </BigRunTime>\n          <BigGenres>\n            {data &&\n              data?.genres.map((genre) => (\n                <Genre key={genre.id}>{genre.name}</Genre>\n              ))}\n          </BigGenres>\n          <CompanyTitle>제작사</CompanyTitle>\n          <BigCompany>\n            {data &&\n              data?.production_companies?.map((company, index) => (\n                <CompanyInfo>\n                  <CompanyLogo\n                    key={index}\n                    bgPhoto={\n                      company.logo_path\n                        ? makeImagePath(company.logo_path, 'w500')\n                        : noPoster\n                    }\n                  ></CompanyLogo>\n                  <CompanyName>{company.name}</CompanyName>\n                </CompanyInfo>\n              ))}\n          </BigCompany>\n\n          <Similar />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { allTrending, ITrendResult } from '../api';\nimport { makeImagePath } from '../utils';\nimport { useNavigate, useMatch } from 'react-router-dom';\nimport { motion, AnimatePresence, useViewportScroll } from 'framer-motion';\nimport Detail from '../Components/Detail';\n\nconst Wrapper = styled.div`\n  background-color: black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding-top: 30px;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst MainBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 7px;\n  width: 80vw;\n  height: 85vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  height: 200px;\n  background-image: url(${(props) => props.bgPhoto});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 10px;\n\n  box-shadow: 0px 2px 15px 0px rgba(255, 255, 255, 0.22);\n  &:first-child,\n  :nth-child(3),\n  :nth-child(5),\n  :nth-child(8),\n  :last-child {\n    grid-column: span 2;\n  }\n  cursor: pointer;\n  &:first-child,\n  :nth-child(4),\n  :nth-child(8) {\n    transform-origin: center left;\n  }\n  &:nth-child(3),\n  :nth-child(7),\n  :last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 20px;\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n\n  h4 {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${(props) => props.theme.black.darker};\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  overflow-y: scroll;\n`;\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -30,\n    borderRadius: 15,\n    zIndex: 99,\n    overflow: 'hidden',\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const movieMatch = useMatch('/movie/:movieId');\n  const tvMatch = useMatch('/tv/:tvId');\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<ITrendResult>('trend', allTrending);\n  const onClickId = (itemId: number, media: string) => {\n    if (media === 'movie') {\n      navigate(`/movie/${itemId}`);\n    } else {\n      navigate(`/tv/${itemId}`);\n    }\n  };\n  const onOverlayClick = () => navigate('/');\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <MainBox>\n            <AnimatePresence>\n              {data?.results.slice(0, 10).map((item) => (\n                <Box\n                  variants={boxVariants}\n                  whileHover=\"hover\"\n                  initial=\"normal\"\n                  transition={{ type: 'tween' }}\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  key={item.id}\n                  onClick={() => onClickId(item.id, item.media_type)}\n                  bgPhoto={makeImagePath(item.backdrop_path)}\n                  layoutId={item.id + ''}\n                >\n                  <Info variants={infoVariants}>\n                    <h4>{item.title ? item.title : item.name}</h4>\n                  </Info>\n                </Box>\n              ))}\n            </AnimatePresence>\n          </MainBox>\n          <AnimatePresence>\n            {movieMatch ? (\n              <Overlay\n                onClick={onOverlayClick}\n                exit={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n              >\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={movieMatch.params.movieId}\n                >\n                  <Detail />\n                </BigMovie>\n              </Overlay>\n            ) : null}\n            {tvMatch ? (\n              <Overlay\n                onClick={onOverlayClick}\n                exit={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n              >\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={tvMatch.params.tvId}\n                >\n                  <Detail />\n                </BigMovie>\n              </Overlay>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { getPopularTv, getTopRatedTv, getTv, IGetTv } from '../api';\nimport { makeImagePath } from '../utils';\nimport { useMatch, useNavigate } from 'react-router-dom';\nimport { IoArrowForward } from 'react-icons/io5';\nimport noPoster from '../assets/noPosterSmall.png';\nimport Detail from '../Components/Detail';\nconst Wrapper = styled.div`\n  background-color: black;\n  padding-bottom: 300px;\n  overflow: hidden;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 50px;\n  margin-bottom: 20px;\n`;\n\nconst OverView = styled.p`\n  font-size: 18px;\n  width: 50%;\n`;\n\nconst Slide = styled.div`\n  position: relative;\n  top: -100px;\n`;\nconst PopSlide = styled.div`\n  margin-top: 200px;\n  position: relative;\n`;\nconst TopSlide = styled.div`\n  margin-top: 300px;\n  position: relative;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 20px;\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\nconst ArrowBtn = styled.div`\n  width: 50px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.4);\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  right: 0;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${(props) => props.theme.black.darker};\n\n  overflow-y: scroll;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n`;\n\nconst rowVariants = {\n  hidden: { x: window.outerWidth - 5 },\n  visible: { x: 0 },\n  exit: { x: -window.outerWidth + 5 },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    borderRadius: 15,\n    overflow: 'hidden',\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\n\nconst offset = 6;\n\nconst Tv = () => {\n  const { data, isLoading: todayLoading } = useQuery<IGetTv>(\n    ['tv', 'today'],\n    getTv\n  );\n  const { data: popTvData, isLoading: popTvLoading } = useQuery<IGetTv>(\n    ['tv', 'popular'],\n    getPopularTv\n  );\n  const { data: topTvData, isLoading: topTvLoading } = useQuery<IGetTv>(\n    ['tv', 'topRate'],\n    getTopRatedTv\n  );\n  const navigate = useNavigate();\n  const bigTvMatch = useMatch('/tv/show/:tvId');\n  const { scrollY } = useViewportScroll();\n  const [todayIndex, setTodayIndex] = useState(0);\n  const [popIndex, setPopIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseToday = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = data?.results.length - 2;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      setTodayIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const increasePop = () => {\n    if (popTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = popTvData?.results.length - 2;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      setPopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const increaseTop = () => {\n    if (topTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTv = topTvData?.results.length - 2;\n      const maxIndex = Math.floor(totalTv / offset) - 1;\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onClickBox = (tvId: number) => {\n    navigate(`/tv/show/${tvId}`);\n  };\n  const onOverlayClick = () => {\n    navigate(-1);\n  };\n  const isLoading = todayLoading || popTvLoading || topTvLoading;\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || '')}>\n            <Title>{data?.results[0]?.name}</Title>\n            <OverView>{data?.results[0]?.overview}</OverView>\n          </Banner>\n\n          <Slide>\n            <h1>{`Today Tv Shows (${offset * todayIndex + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={todayIndex}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * todayIndex, offset * todayIndex + offset)\n                  .map((tv) => (\n                    <Box\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      layoutId={String(tv.id)}\n                      initial=\"normal\"\n                      onClick={() => onClickBox(tv.id)}\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, 'w500')\n                          : makeImagePath(tv.poster_path, 'w500')\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={increaseToday}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </Slide>\n          <PopSlide>\n            <h1>{`Popular Tv Shows (${offset * popIndex + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={popIndex}\n              >\n                {popTvData?.results\n                  .slice(2)\n                  .slice(offset * popIndex, offset * popIndex + offset)\n                  .map((tv) => (\n                    <Box\n                      key={tv.id}\n                      layoutId={String(tv.id)}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      onClick={() => onClickBox(tv.id)}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, 'w500')\n                          : noPoster\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={increasePop}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </PopSlide>\n          <TopSlide>\n            <h1>{`TopRated Tv Shows (${offset * topIndex + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={topIndex}\n              >\n                {topTvData?.results\n                  .slice(2)\n                  .slice(offset * topIndex, offset * topIndex + offset)\n                  .map((tv) => (\n                    <Box\n                      key={tv.id}\n                      layoutId={String(tv.id)}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      onClick={() => onClickBox(tv.id)}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, 'w500')\n                          : noPoster\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={increaseTop}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </TopSlide>\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={bigTvMatch.params.tvId}\n                >\n                  <Detail />\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Tv;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useLocation, useNavigate, useMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ISearchResult, searchAll } from '../api';\nimport { makeImagePath } from '../utils';\nimport noPoster from '../assets/noPosterSmall.png';\nimport { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\nimport Detail from '../Components/Detail';\nconst Wrapper = styled.div`\n  background-color: black;\n  margin: 100px 0px;\n  width: 100%;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst BoxContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  padding: 60px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  width: 300px;\n  height: 200px;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  margin-bottom: 20px;\n\n  &:nth-child(4n-3) {\n    transform-origin: center left;\n  }\n\n  &:nth-child(4n) {\n    transform-origin: center right;\n  }\n`;\n\nconst MediaType = styled.div`\n  background-color: red;\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    color: white;\n    font-size: 12px;\n    font-weight: bold;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 20px;\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  position: absolute;\n  width: 300px;\n  bottom: 0;\n\n  h4 {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${(props) => props.theme.black.darker};\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  overflow-y: scroll;\n`;\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -30,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\ninterface SearchProps {\n  search: string;\n}\n\nconst Search = () => {\n  const navigate = useNavigate();\n  const movieMatch = useMatch('/search/movies/:movieId');\n  console.log(movieMatch);\n  const tvMatch = useMatch('/search/tv/:tvId');\n  console.log(tvMatch);\n  const { scrollY } = useViewportScroll();\n  const location = useLocation() as SearchProps;\n  const keyword = new URLSearchParams(location.search).get('keyword');\n  const { data, isLoading } = useQuery<ISearchResult>(['search', keyword], () =>\n    searchAll(keyword)\n  );\n  const onClickBox = (mediaType: string, searchId: number) => {\n    console.log(mediaType);\n    if (mediaType === 'movie') {\n      navigate(`/search/movies/${searchId}`);\n    } else {\n      navigate(`/search/tv/${searchId}`);\n    }\n  };\n  const onOverlayClick = () => {\n    navigate(-1);\n  };\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <BoxContainer>\n            {data?.results.map((search) => (\n              <AnimatePresence>\n                <Box\n                  initial=\"normal\"\n                  whileHover=\"hover\"\n                  variants={boxVariants}\n                  key={search.id}\n                  onClick={() => onClickBox(search.media_type, search.id)}\n                  bgPhoto={\n                    search.backdrop_path\n                      ? makeImagePath(search.backdrop_path, 'w500')\n                      : noPoster\n                  }\n                >\n                  <MediaType>\n                    {' '}\n                    <span>{search.media_type}</span>\n                  </MediaType>\n                  <Info variants={infoVariants}>\n                    <h4>{search.title ? search.title : search.name}</h4>\n                  </Info>\n                </Box>\n              </AnimatePresence>\n            ))}\n          </BoxContainer>\n          <AnimatePresence>\n            {movieMatch ? (\n              <Overlay\n                onClick={onOverlayClick}\n                exit={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n              >\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={movieMatch.params.movieId}\n                >\n                  <Detail />\n                </BigMovie>\n              </Overlay>\n            ) : null}\n            {tvMatch ? (\n              <Overlay\n                onClick={onOverlayClick}\n                exit={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n              >\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={tvMatch.params.tvId}\n                >\n                  <Detail />\n                </BigMovie>\n              </Overlay>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { motion, useAnimation, useViewportScroll } from 'framer-motion';\nimport { Link, useMatch, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 999;\n  font-size: 13px;\n  padding: 20px 60px;\n  color: white;\n`;\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  border-radius: 4px;\n  bottom: -6px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  color: white;\n  z-index: -1;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\nconst logoVariants = {\n  start: {\n    stroke: 'white',\n    strokeWidth: 2,\n    fill: 'rgba(255,255,255,0)',\n    pathLength: 0,\n  },\n  end: {\n    fill: 'rgb(253, 6, 6)',\n    pathLength: 1,\n  },\n};\nconst navVariants = {\n  top: { backgroundColor: 'rgba(0,0,0,0)' },\n  scroll: { backgroundColor: 'rgba(0,0,0,1)' },\n};\n\ninterface IForm {\n  keyword: string;\n}\nconst Header = () => {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useMatch('/');\n  const movieMatch = useMatch('/movies');\n  const tvMatch = useMatch('/tv');\n  const inputAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const navAnimation = useAnimation();\n  const openSearch = () => {\n    if (searchOpen) {\n      //trigger the close animation\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      //trigger the open animation\n      inputAnimation.start({\n        scaleX: 1,\n      });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start('scroll');\n      } else {\n        navAnimation.start('top');\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const navigate = useNavigate();\n  const { register, setValue, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    navigate(`/search?keyword=${data.keyword}`);\n    setValue('keyword', '');\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={'top'}>\n      <Col>\n        <Logo\n          whileHover=\"active\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path\n            variants={logoVariants}\n            initial=\"start\"\n            animate=\"end\"\n            transition={{\n              default: { duration: 5 },\n              fill: { duration: 1, delay: 3 },\n            }}\n            d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n          />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              {' '}\n              Home {homeMatch?.pathname === '/' && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/movies\">\n              {' '}\n              Movie{' '}\n              {movieMatch?.pathname === '/movies' && (\n                <Circle layoutId=\"circle\" />\n              )}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              {' '}\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}{' '}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={openSearch}\n            transition={{ type: 'linear' }}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register('keyword', { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: 'linear' }}\n            placeholder=\"Search Movie or TvShow\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { getMovies, IGetMoviesResult, topMovies, upcomingMovie } from '../api';\nimport { makeImagePath } from '../utils';\nimport { useNavigate, useMatch } from 'react-router-dom';\nimport { motion, AnimatePresence, useViewportScroll } from 'framer-motion';\nimport { IoArrowForward } from 'react-icons/io5';\nimport noPoster from '../assets/noPosterSmall.png';\nimport Detail from '../Components/Detail';\nconst Wrapper = styled.div`\n  background-color: black;\n  padding-bottom: 300px;\n  overflow: hidden;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\nconst Title = styled.h2`\n  font-size: 50px;\n  margin-bottom: 20px;\n`;\n\nconst OverView = styled.p`\n  font-size: 18px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\nconst UpcomingSlide = styled.div`\n  margin-top: 200px;\n  position: relative;\n`;\nconst TopSlide = styled.div`\n  margin-top: 300px;\n  position: relative;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  position: absolute;\n  width: 100%;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 20px;\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 14px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${(props) => props.theme.black.darker};\n\n  overflow-y: scroll;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n`;\n\nconst ArrowBtn = styled.div`\n  width: 50px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.4);\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  right: 0;\n`;\nconst rowVariants = {\n  hidden: { x: window.outerWidth - 5 },\n  visible: { x: 0 },\n  exit: { x: -window.outerWidth + 5 },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    borderRadius: 15,\n    overflow: 'hidden',\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: 'tween',\n    },\n  },\n};\nconst offset = 6;\n\nconst Movie = () => {\n  const navigate = useNavigate();\n  const bigMovieMatch = useMatch('/movies/:movieId');\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading: nowLoading } = useQuery<IGetMoviesResult>(\n    ['movies', 'nowPlaying'],\n    getMovies\n  );\n  const {\n    data: topMovieData,\n    isLoading: topMovieLoading,\n  } = useQuery<IGetMoviesResult>(['movie', 'topMovie'], topMovies);\n  const {\n    data: upcomingData,\n    isLoading: upcomingLoading,\n  } = useQuery<IGetMoviesResult>(['movie', 'upcoming'], upcomingMovie);\n\n  const [index, setIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [upIndex, setUpIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data?.results.length - 2;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const upInCreseIndex = () => {\n    if (upcomingData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = upcomingData?.results.length - 2;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setUpIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const topIncreseIndex = () => {\n    if (topMovieData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = topMovieData?.results.length - 2;\n\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    navigate(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => navigate(-1);\n\n  const isLoading = nowLoading || topMovieLoading || upcomingLoading;\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading....</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || '')}>\n            <Title>{data?.results[0]?.title}</Title>\n            <OverView>{data?.results[0]?.overview}</OverView>\n          </Banner>\n          <Slider>\n            <h1>{`Now Playing Movie (${offset * index + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={String(movie.id)}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      onClick={() => onBoxClicked(movie.id)}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={incraseIndex}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </Slider>\n          <UpcomingSlide>\n            <h1>{`UP-coming Movie (${offset * upIndex + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={upIndex}\n              >\n                {upcomingData?.results\n                  .slice(2)\n                  .slice(offset * upIndex, offset * upIndex + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={String(movie.id)}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      onClick={() => onBoxClicked(movie.id)}\n                      bgPhoto={\n                        movie.backdrop_path\n                          ? makeImagePath(movie.backdrop_path, 'w500')\n                          : noPoster\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={upInCreseIndex}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </UpcomingSlide>\n          <TopSlide>\n            <h1>{`TOP Rated Movie (${offset * topIndex + offset})`}</h1>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: 'tween', duration: 1 }}\n                key={topIndex}\n              >\n                {topMovieData?.results\n                  .slice(2)\n                  .slice(offset * topIndex, offset * topIndex + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={String(movie.id)}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      transition={{ type: 'tween' }}\n                      onClick={() => onBoxClicked(movie.id)}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <ArrowBtn onClick={topIncreseIndex}>\n              <IoArrowForward style={{ fontSize: 30 }} />\n            </ArrowBtn>\n          </TopSlide>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{\n                    top: scrollY.get() + 100,\n                    bottom: scrollY.get() + 100,\n                  }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  <Detail />\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Movie;\n","import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './Routes/Home';\nimport Tv from './Routes/Tv';\nimport Search from './Routes/Search';\nimport Header from './Components/Header';\n\nimport Movie from './Routes/Movie';\nimport Detail from './Components/Detail';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />}>\n          <Route path=\"/movie/:movieId\" element={<Detail />} />\n          <Route path=\"/tv/:tvId\" element={<Detail />} />\n        </Route>\n      </Routes>\n      <Routes>\n        <Route path=\"/movies\" element={<Movie />}>\n          <Route path=\"/movies/:movieId\" element={<Detail />} />\n        </Route>\n      </Routes>\n      <Routes>\n        <Route path=\"/tv\" element={<Tv />}>\n          <Route path=\"/tv/show/:tvId\" element={<Detail />} />\n        </Route>\n      </Routes>\n      <Routes>\n        <Route path=\"/search\" element={<Search />}>\n          <Route path=\"/search/movies/:movieId\" element={<Detail />} />\n          <Route path=\"/search/tv/:tvId\" element={<Detail />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { theme } from './theme';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;500;700&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Oswald', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n background-color: black;\n  \n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n\n\n`;\n\nconst client = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const theme: DefaultTheme = {\n  red: '#E51013',\n  black: {\n    veryDark: '#040714',\n    darker: '#181818',\n    lighter: '#2F2F2F',\n  },\n  white: {\n    lighter: '#fff',\n    darker: '#e5e5e5',\n  },\n};\n"],"sourceRoot":""}